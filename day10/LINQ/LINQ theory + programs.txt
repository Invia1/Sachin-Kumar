LINQ

LINQ (Language Integrated Query) is a powerful feature in C# that allows you to write query expressions for querying and manipulating data from different data sources, such as collections, databases, XML, and more. LINQ provides a unified syntax and set of operators to work with different data sources, making it easier to retrieve, filter, project, and transform data.

LINQ queries are written using a combination of query syntax (resembling SQL) and method syntax (using extension methods). LINQ queries can be performed on collections that implement the IEnumerable<T> interface or on data sources that provide LINQ providers.

 ...................DIFFERENCES BETWEEN EXPRESSION AND EXTENSION...............

// EXAMPLE USING EXPRESSION METHOD..........................................
List<int> numbers = new List<int> { 1, 2, 3, 4, 5 };

var evenNumbers = numbers.Where(n => n % 2 == 0);

foreach (int number in evenNumbers)
{
    Console.WriteLine(number);
}


// EXAMPLE USING EXTENSION WAY.................................................
var evenNumbers = numbers.Where(number => number % 2 == 0);

Remember remove from and select keyword from the quaries.


//.......PROGRAMS....... 

List<int> arr = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

// where Clause
var brr = arr.where(i => 1>6);

// to sort orderBY
var brr arr.orderBy(i=>i);  // In decending .. var brr  = arr.OrderByDescending(i=>i);

// group by....
using System;
using System.Linq;

class Program
{
    static void Main()
    {
        int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

        var groupedNumbers = numbers.GroupBy(number => number % 2 == 0 ? "Even" : "Odd");

        foreach (var group in groupedNumbers)
        {
            Console.WriteLine("Key: " + group.Key);
            Console.WriteLine("Numbers: " + string.Join(", ", group));
            Console.WriteLine();
        }
    }

// Key: Odd
Numbers: 1, 3, 5, 7, 9

Key: Even
Numbers: 2, 4, 6, 8, 10
//

using System;
using System.Linq;

class Program
{
    static void Main()
    {
        string[] fruits = { "apple", "banana", "cherry", "date", "elderberry", "fig" };

        var groupedFruits = fruits.GroupBy(fruit => fruit[0]);

        foreach (var group in groupedFruits)
        {
            Console.WriteLine("Key: " + group.Key);
            Console.WriteLine("Fruits: " + string.Join(", ", group));
            Console.WriteLine();
        }
    }
}

//
Key: a
Fruits: apple

Key: b
Fruits: banana

Key: c
Fruits: cherry

Key: d
Fruits: date

Key: e
Fruits: elderberry

Key: f
Fruits: fig











